"""
Corpus generating
"""
import ser_xml as ser
import numpy as np
import os
import locale

from medipy.base import find_resource

def gen(nom):
    
    old_locale = locale.getlocale()
    locale.setlocale(locale.LC_ALL, "C")
    
    tab=ser.read_s()
    k=len(tab)/4
    f=open(find_resource(os.path.join("resources", "components", "belghith", 'entete.txt')), 'r')
    l=f.readlines()
    f.close()
    f=open('nom', 'w')
    l1=f.writelines(l)
    #l1=f.writelines('\n')
    for h in range(k):
        m1='<Peak2D F1="'
        m2=str(tab[h,0])
        m3='" F2="'
        m4=str(tab[h,1])
        m5='" annotation="'
        m6=str(tab[h,2])
        m7='" intensity="'
        m8=str(tab[h,3])
        m9='" type="0"/>\n'
        m=m1+m2+m3+m4+m5+m6+m7+m8+m9
        l1=f.writelines(m)
    l1=f.writelines('</PeakList2D> \n')
    l1=f.writelines('</PeakList> \n')
    f.close()
    
    locale.setlocale(locale.LC_ALL, old_locale)
    
def gen_s_ch(tab,root,nom):
    
    old_locale = locale.getlocale()
    locale.setlocale(locale.LC_ALL, "C")
    
    #tab=ser.read_s()
    k=len(tab)
    f=open(find_resource(os.path.join("resources", "components", "belghith", 'entete.txt')), 'r')
    l=f.readlines()
    f.close()
    f=open(os.path.join(root,nom), 'w')
    l1=f.writelines(l)
    #l1=f.writelines('\n')
    for h in range(k):
        m1='<Peak2D F1="'
        m2=str(tab[h][0])
        m3='" F2="'
        m4=str(tab[h][1])
        m5='" annotation="'
        m6=str(tab[h][2])
        m7='" intensity="'
        m8=str(tab[h][3])
        m9='" depH="'
        m10=str(tab[h][4])
        m11='" depC="'
        m12=str(tab[h][5])
        m13='" type="0"/>\n'
        m=m1+m2+m3+m4+m5+m6+m7+m8+m9+m10+m11+m12+m13
        l1=f.writelines(m)
    l1=f.writelines('</PeakList2D> \n')
    l1=f.writelines('</PeakList> \n')
    f.close()  
    locale.setlocale(locale.LC_ALL, old_locale)
      
def cell2tab(tabc):
    old_locale = locale.getlocale()
    locale.setlocale(locale.LC_ALL, "C")
    tabb=[]
    k=len(tabc)/4
    for h in range(k):
        tabb.append((tabc[h,0],tabc[h,1],tabc[h,2],tabc[h,3]))
    locale.setlocale(locale.LC_ALL, old_locale)
    return tabb
def gen_s(tab,root,nom):
    old_locale = locale.getlocale()
    locale.setlocale(locale.LC_ALL, "C")
    
    #tab=ser.read_s()
    k=len(tab)
    f=open(find_resource(os.path.join("resources", "components", "belghith", 'entete.txt')), 'r')
    l=f.readlines()
    f.close()
    f=open(os.path.join(root,nom), 'w')
    l1=f.writelines(l)
    #l1=f.writelines('\n')
    for h in range(k):
        m1='<Peak2D F1="'
        m2=str(tab[h][0])
        m3='" F2="'
        m4=str(tab[h][1])
        m5='" annotation="'
        m6=str(tab[h][2])
        m7='" intensity="'
        m8=str(tab[h][3])
        m9='" type="0"/>\n'
        m=m1+m2+m3+m4+m5+m6+m7+m8+m9
        l1=f.writelines(m)
    l1=f.writelines('</PeakList2D> \n')
    l1=f.writelines('</PeakList> \n')
    f.close()
    
    locale.setlocale(locale.LC_ALL, old_locale)